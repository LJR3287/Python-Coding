import turtle           # Tess becomes a traffic light.

turtle.setup(400,500)
wn = turtle.Screen()
wn.title("Tess becomes a traffic light!")
wn.bgcolor("lightgreen")
tess = turtle.Turtle()

tessR = turtle.Turtle()
tessO = turtle.Turtle()
tessG = turtle.Turtle()

time_to_delay =1000 # one second

def draw_housing():
    """ Draw a nice housing to hold the traffic lights """
    tess.pensize(3)
    tess.color("black", "darkgrey")
    tess.begin_fill()
    tess.forward(80)
    tess.left(90)
    tess.forward(200)
    tess.circle(40, 180)
    tess.forward(200)
    tess.left(90)
    tess.end_fill()
    tess.hideturtle()
    tess.penup()

# Second trafic light
def display_light2(state_num):

    tessG.reset()      #initialise all turtles
    tessG.hideturtle()
    tessG.goto(0,0)
    
    tessO.reset()
    tessO.hideturtle()
    tessO.goto(0,0)

    tessR.reset()   
    tessR.hideturtle()
    tessR.goto(0,0)

    # Position tess onto the place where the green light should be
    tessG.hideturtle()
    tessG.penup()
    tessG.forward(40)
    tessG.left(90)
    tessG.forward(50)

    # Turn tess into a big green circle
    tessG.showturtle()
    tessG.shape("circle")
    tessG.shapesize(3)
    if state_num == 3 or state_num == 2:
        tessG.fillcolor("green")
    else:
        tessG.fillcolor("#003000") #dark green

    tessO.penup()
    tessO.goto(0,0)

    # Position tess onto the place where the orange light should be
    tessO.hideturtle()
    tessO.forward(40)
    tessO.left(90)
    tessO.forward(120)

    # Turn tess into a big orange circle
    tessO.showturtle()
    tessO.shape("circle")
    tessO.shapesize(3)
    if state_num == 1 or state_num == 2:
        tessO.fillcolor("orange")
    else:
        tessO.fillcolor("#484800") # dark orange

    tessR.penup()
    tessR.goto(0,0)
    # Position tess onto the place where the red light should be
    tessR.hideturtle()
    tessR.forward(40)
    tessR.left(90)
    tessR.forward(190)

    # Turn tess into a big red circle
    tessR.showturtle()
    tessR.shape("circle")
    tessR.shapesize(3) 
    if state_num == 0:
        tessR.fillcolor("red")
    else:
        tessR.fillcolor("#480000")   #dark red

# Draw housing 2 only now using draw_housing
tess.goto(0,0)
tess.pendown()
draw_housing()
tess.penup()

state_num = 3       # starting colour - green

def advance_state_machine():
    global state_num
    if state_num ==0:
        Title="Red    - 2 Seconds"
    if state_num ==1:
        Title="Orange - 1 Second "
    if state_num ==2:
        Title="Green + Orange  - 1 Second"
    if state_num ==3:
        Title="Green  - 3 Seconds"
        
    wn.title(Title)          # show state_num on screen title
                             # 3 - Green
                             # 2 - Green + Orange
                             # 1 - Orange
                             # 0 - Red

    #  display trafic light first
    display_light2(state_num)

    if state_num == 3:       # Transition from state 3 to state 2
        state_num = 2
    elif state_num == 2:     # Transition from state 2 to state 1
        state_num = 1
    elif state_num == 1:     # Transition from state 1 to state 0
        state_num = 0
    else:                    # Transition from state 0 to state 3
        state_num = 3
        

# Bind the event handler to timer
for i in range(0,13,1):
    if state_num == 3:  # green
        time_to_delay = 3000
    elif state_num == 0: # red
        time_to_delay = 2000
    else:
        time_to_delay = 1000
    wn.ontimer(advance_state_machine(), time_to_delay)

wn.listen()                      # Listen for events
wn.mainloop()
