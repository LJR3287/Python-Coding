def cleanword(s):
    t=""
    for i in range(0,len(s)):
        if s[i].isalpha():
            t=t+s[i]
    return (t)

def has_dashdash(s):
    i=s.find("--")
    if i==-1:
        return False # not found
    else:
        return True  # found

def extract_words(s):
    t=""
    for i in range(0,len(s)): # remove special chars
        if s[i].isalpha():
            t=t+s[i]
        else:
            t=t+" "
    words=t.split()
    return words

def wordcount(w, s):
    n=0
    idx=0
    while idx<len(s):
        i=s[idx].find(w)
        if i!=-1:
            n+=1
        idx=idx+1
    return n

def wordset(s):
    n=0
    idx=0
    wset=[]
    for i in range (0, len(s)):
        found=0
        for j in range (0, idx):
            if s[i]==wset[j]:
                found+=1
        if found==0:
           wset.append(s[i])
           idx+=1
#        print (idx, wset)
    return wset

def longestword(s):
    longest=0
    for i in range (0, len(s)):
        if len(s[i]) > longest:
            longest=len(s[i])
#        print (s[i], longest)
    return longest

print (cleanword("what?"))
print (cleanword("'now!'"))
print (cleanword("?+='w-o-r-d!,@$()'"))

print (has_dashdash("distance--but"))
print (not has_dashdash("several"))
print (has_dashdash("spoke--"))
print (has_dashdash("distance--but"))
print (not has_dashdash("-yo-yo-"))

print(extract_words("Now is the time!  'Now', is the time? Yes, now."))
print(extract_words("she tried to curtsey as she spoke--fancy"))

print(wordcount("now", ["now","is","time","is","now","is","is"]))
print(wordcount("is", ["now","is","time","is","now","the","is"]))
print(wordcount("time", ["now","is","time","is","now","is","is"]))
print(wordcount("frog", ["now","is","time","is","now","is","is"]))

print(wordset(["now", "is", "time", "is", "now", "is", "is"]))
print(wordset(["I", "a", "a", "is", "a", "is", "I", "am"]))
print(wordset(["or", "a", "am", "is", "are", "be", "but", "am"]))

print (longestword(["a", "apple", "pear", "grape"]))
print (longestword(["a", "am", "I", "be"]))
print (longestword(["this","supercalifragilisticexpialidocious"]))
print (longestword([ ]))
